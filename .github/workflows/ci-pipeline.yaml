name: CI Pipeline

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: false
        default: ''

concurrency:
  group: 'git-autocommit-cli-${{ github.ref }}'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VERSION: '1.0.0'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Lint
        run: ./gradlew ktlintCheck

      - name: Build
        run: ./gradlew build

      - name: Test
        run: ./gradlew test

      - name: Package
        run: ./gradlew shadowJar

      - name: Upload JAR as artifact
        uses: actions/upload-artifact@v3
        with:
          name: autocommit
          path: build/libs/*.jar

  set_version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump_version.outputs.new_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Current Version
        id: get_current_version
        run: |
          version=$(grep -oP 'version\s*=\s*"\K[^"]+' build.gradle.kts)
          echo "Current version: $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Bump Version
        id: bump_version
        run: |
          current_version="${{ steps.get_current_version.outputs.version }}"
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ github.event.inputs.version }}" ]; then
            new_version="${{ github.event.inputs.version }}"
          else
            IFS='.' read -r major minor patch <<< "$current_version"
            new_patch=$((patch + 1))
            new_version="$major.$minor.$new_patch"
          fi
          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Update Version in build.gradle.kts
        if: github.event_name == 'workflow_dispatch'
        run: |
          sed -i 's/version = "[^"]*"/version = "${{ steps.bump_version.outputs.new_version }}"/' build.gradle.kts
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add build.gradle.kts
          git commit -m "Bump version to ${{ steps.bump_version.outputs.new_version }}"
          git push origin HEAD:main

  release:
    needs: [build, set_version]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: autocommit
          path: ./build/libs

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.set_version.outputs.new_version }}
          release_name: Release ${{ needs.set_version.outputs.new_version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/autocommit*all.jar
          asset_name: autocommit.jar
          asset_content_type: application/java-archive

      - name: Update Major Version Tag
        run: |
          git tag -fa v1 -m "Update v1 tag to latest release" v${{ needs.set_version.outputs.new_version }}
          git push origin v1 --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}